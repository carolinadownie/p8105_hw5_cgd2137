---
title: "p8105_hw5_cgd2137"
author: "Carolina Downie"
date: "11/1/2017"
output: html_document
---

```{r loading packages}
library(tidyverse)
library(rvest)
library(httr)
library(forcats)
library(stringr)
library(janitor)
library(haven)
library(stringr)
library(forcats)
library(ggplot2)

knitr::opts_chunk$set(
  fig.width = 11,
  fig.asp = .6,
  out.width = "90%")
```

#Problem 1: 
Using the State of New York API, read the complete dataset using functions in httr. By default, the API will return only the first 1000 entries, so using the GET option query = list($limit= 2000) in your request will be useful.

```{r loading and cleaning New York subway data}
nyc_subway <- GET("https://data.ny.gov/resource/hvwh-qtfg.json", query = list("$limit" = 2000)) %>% 
  content("text") %>%
  jsonlite::fromJSON() %>%
  select(station_name, north_south_street, east_west_street, entrance_latitude, entrance_longitude, corner)
```

Make a plot showing the number of entrances for each subway station. Restrict your plot to stations that have more than 10 entrances, and order stations according to the number of entrances.

```{r number of entrances for each subway station}
nyc_subway %>% group_by(station_name) %>%
  mutate(num_entrances = n()) %>%
  filter(num_entrances > 10) %>%
  ggplot(aes(x = fct_reorder(station_name, num_entrances), y = num_entrances)) + 
    geom_point() + labs(
    title = "Number of entrances for each subway station",
    x = "Subway station",
    y = "Number of entrances") +
    theme(axis.text.x = element_text(angle = 90, hjust = 1)) 
  
  

```

Overall (not only in stations that have more than 10 entrances), how many subway station names contain the abbreviation “St”? How many end with “St”?

```{r subway stations containing St}

nyc_subway_contains_st<-nyc_subway %>% filter(str_detect(station_name, "St")) 
  
```

There are `r length(unique(nyc_subway_contains_st$station_name))` subway stations containing "St" in their name. 

```{r subway statins ending in St}
nyc_subway_ends_St<-nyc_subway_contains_st %>% 
  pull(station_name) %>% 
  str_locate(., "St") %>% 
  data.frame() %>% 
  cbind(., nyc_subway_contains_st) %>%
  filter(end == str_length(station_name))

```

There are `r length(unique(nyc_subway_ends_St$station_name))` subway stations with names ending in "St". 

#Problem 2:
I’m curious about how many people watched each episode of “Game of Thrones” over the past 7 seasons. Find these data online and import them into R using functions in rvest. Taking the time to find data that’s pretty close to the format you want is worth a bit of effort; wikipedia is a good place to start.



```{r loading wikipedia chart}
url<- "https://en.wikipedia.org/wiki/Game_of_Thrones#cite_note-S3ratings-277"

ratings_xml <- (read_html(url) %>% html_nodes(css = "table"))[[4]] %>% html_table(header = TRUE) %>% data.frame()

```

After you’ve found and read the data, make sure they’re tidy. In your final dataset, include variables for season, episode, and viewers; also create a unique episode ID of the form SX_EYY where X and Y are season or episode numbers.

```{r tidying GoT chart}

GoT_ratings <- ratings_xml %>% select(-c(Average, Season)) %>% 
  rename(Season = Season.1) %>%
  gather(key = Episode, value = Num_viewers, Ep..1: Ep..10) %>%
  separate(Episode, c("remove", "Episode"), "\\..") %>% 
  select(-remove) %>%
  filter(Num_viewers != "N/A") %>%
  mutate(episode_id = paste("S",substr(Season, 1,1), "_","E",substr(Episode, 1, 2)), Num_viewers = as.numeric(Num_viewers)) 

```

Make a plot that shows the number of viewers for each episode of each season.

```{r number of viewers for each episode of each season}
GoT_ratings %>% 
  mutate(episode_id = fct_reorder(episode_id, Num_viewers)) %>%
  ggplot(aes(x = episode_id, y = Num_viewers)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Number of viewers for each Game of Thrones episode",
    x = "Episode_id",
    y = "Number of viewers (millions)") + 
  theme(legend.position = "bottom") + theme(axis.text.x = element_text(angle = 90, hjust = 1))

#Is this the best way to order the graph??
```


Make a boxplot of the number of viewers for each episode of each season.
```{r boxplot of number of viewers}
GoT_ratings %>%
  mutate(Episode = fct_reorder(Episode, Num_viewers)) %>%
  ggplot(aes(x = Episode, y = Num_viewers)) +
  geom_boxplot() +
  labs(
    title = "Distribution of number of viewers for each Game of Thrones episode across seasons",
    x = "Episode",
    y = "Number of viewers (millions)") + 
  theme(legend.position = "bottom") + theme(axis.text.x = element_text(angle = 90, hjust = 1))



```


Fit a linear model that treats number of viewers in each episode as a response and season as a categorical predictor; make season 4 the reference season. Present and discuss the results of your modeling.

```{r linear model}
GoT_ratings %>% 
  mutate(Season = as.factor(Season), Season = fct_relevel(Season, "4")) %>%
  lm(Num_viewers ~ Season, data = .) %>%
  broom::tidy() %>% 
  select(-std.error, -statistic) %>% 
  knitr::kable(digits = 3)
```


This linear model suggests that for seasons 1, 2, and 3, season had a negative relationship with number of viewers, whereas for seasons 5, 6, and 7, season had a positive relationship with number of viewers (when season 4 was used as the reference group). Season 7 has the largest estimated intercept. 
